package com.dx;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Vector;

import javax.swing.BorderFactory;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListSelectionModel;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

import com.dx.dao.DBHelper;
import com.dx.inter.FaceLogsInterface;
import com.dx.pojo.FaceLog;
import com.dx.pojo.ParamSetup;
import com.dx.pojo.Zkzdata;
import com.dx.service.FaceLogsImpl;
import com.dx.util.BaseUtil;
import com.dx.util.DateChooser;

/**
 * 认证结果查询
 * 
 * */
public class ResultChaxun extends JPanel{
	private JTextField endDate;
	private JTextField startDate;
	private JTable table;
	private JLabel label1;
	private JComboBox condition1;
	private JLabel label2;
	private JComboBox condition2;
	private JLabel label3;
	private JComboBox condition3;
	private JLabel label4;
	private JLabel label5;
	//private TbUserlist user;
	private JButton button;
	private DefaultTableModel dftm;
	private BaseUtil bu = new BaseUtil();
	private Integer allcount = 0 ;
	private FaceLogsInterface facelog = new FaceLogsImpl();

	public ResultChaxun() {
		super();
		try {
			Border titleBorder1 = BorderFactory.createTitledBorder("认证结果查询");
	        setBorder(titleBorder1);
			GridBagLayout gridBagLayout = new GridBagLayout();
			gridBagLayout.columnWeights = new double[]{1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};
			setLayout(gridBagLayout);
			setBounds(100, 100, 601, 331);
	
			//场次
			label3 = new JLabel();
			label3.setFont(new Font("", Font.PLAIN, 14));
			label3.setText("请选择   场次：");
			final GridBagConstraints gridBagConstraints3 = new GridBagConstraints();
			gridBagConstraints3.gridy = 0;
			gridBagConstraints3.gridx = 0;
			add(label3, gridBagConstraints3);
			
			//场次选项
			condition3 = new JComboBox();
			String[] kaochang = new String[] {"职业道德","职业能力","岗位技能"}; //getKaoChang();//从数据库获取考场下拉列表
			condition3.setModel(new DefaultComboBoxModel(kaochang));
			condition3.setFont(new Font("", Font.PLAIN, 14));
			condition3.setPreferredSize(new Dimension(110, 30));
			final GridBagConstraints gridBagConstraints_3 = new GridBagConstraints();
			gridBagConstraints_3.gridy = 0;
			gridBagConstraints_3.gridx = 1;
			add(condition3, gridBagConstraints_3);
			
			//认证结果
			label1 = new JLabel();
			label1.setFont(new Font("", Font.PLAIN, 14));
			label1.setText(" 认证结果：");
			final GridBagConstraints gridBagConstraints = new GridBagConstraints();
			gridBagConstraints.gridy = 0;
			gridBagConstraints.gridx = 2;
			add(label1, gridBagConstraints);
	
			//认证结果选项
			condition1 = new JComboBox();
			String[] dishistr = new String[] {"请选择","通过","不通过","未认证"};//从数据库获取地市列表
			condition1.setModel(new DefaultComboBoxModel(dishistr));
			condition1.setFont(new Font("", Font.PLAIN, 14));
			condition1.setPreferredSize(new Dimension(80, 30));
			final GridBagConstraints gridBagConstraints_1 = new GridBagConstraints();
			gridBagConstraints_1.gridy = 0;
			gridBagConstraints_1.gridx = 3;
			add(condition1, gridBagConstraints_1);
			
			//次数
			label2 = new JLabel();
			label2.setFont(new Font("", Font.PLAIN, 14));
			label2.setText(" 次数：");
			final GridBagConstraints gridBagConstraints2 = new GridBagConstraints();
			gridBagConstraints2.gridy = 0;
			gridBagConstraints2.gridx = 4;
			add(label2, gridBagConstraints2);
	
			//次数选项
			condition2 = new JComboBox();//从数据库获取考点下拉列表
			String[] kaodian = facelog.getRenzCount();
			condition2.setModel(new DefaultComboBoxModel(kaodian));
			condition2.setFont(new Font("", Font.PLAIN, 14));
			condition2.setPreferredSize(new Dimension(80, 30));
			final GridBagConstraints gridBagConstraints_2 = new GridBagConstraints();
			gridBagConstraints_2.gridy = 0;
			gridBagConstraints_2.gridx = 5;
			add(condition2, gridBagConstraints_2);
			
			
			//认证开始时间
			label4 = new JLabel();
			label4.setFont(new Font("", Font.PLAIN, 14));
			label4.setText(" 认证时间：");
			final GridBagConstraints gridBagConstraints4 = new GridBagConstraints();
			gridBagConstraints4.gridy = 0;
			gridBagConstraints4.gridx = 6;
			add(label4, gridBagConstraints4);
	
			//时间框为填写区域
			startDate = new JTextField();
			final GridBagConstraints gridBagConstraints_4 = new GridBagConstraints();
			startDate.setFont(new Font("", Font.PLAIN, 14));
			startDate.setPreferredSize(new Dimension(180, 30));
			gridBagConstraints_4.gridy = 0;
			gridBagConstraints_4.gridx = 7;
			DateChooser dateChooser1 = DateChooser.getInstance("yyyy-MM-dd HH:mm:ss");
			dateChooser1.register(startDate);
			add(startDate, gridBagConstraints_4);
			
			
			//认证结束时间
			label5 = new JLabel();
			label5.setFont(new Font("", Font.PLAIN, 14));
			label5.setText("至");
			final GridBagConstraints gridBagConstraints5 = new GridBagConstraints();
			gridBagConstraints5.ipadx = 20;
			gridBagConstraints5.gridy = 0;
			gridBagConstraints5.gridx = 8;
			add(label5, gridBagConstraints5);
	
			
			//认证结束时间选项
			endDate = new JTextField();
			final GridBagConstraints gridBagConstraints_5 = new GridBagConstraints();
			endDate.setFont(new Font("", Font.PLAIN, 14));
			endDate.setPreferredSize(new Dimension(180, 30));
			gridBagConstraints_5.gridy = 0;
			gridBagConstraints_5.gridx = 9;
			DateChooser dateChooser2 = DateChooser.getInstance("yyyy-MM-dd HH:mm:ss");
			dateChooser2.register(endDate);
			add(endDate, gridBagConstraints_5);
			
			//查询按钮
			button = new JButton();
			final GridBagConstraints gridBagConstraints_7 = new GridBagConstraints();
			gridBagConstraints_7.gridy = 0;
			gridBagConstraints_7.gridx = 10;
			button.setFont(new Font("", Font.PLAIN, 14));
			button.setText("查询");
			add(button, gridBagConstraints_7);
			
			button.addActionListener(new ActionListener() {
	            public void actionPerformed(ActionEvent e) {
//	            	认证结果
	            	String rzresult = bu.getStr(condition1.getSelectedItem()+"") ;
//	            	认证次数
	            	String rzcount = bu.getStr(condition2.getSelectedItem()+"") ;
//	            	场次
	            	String changci = bu.getStr(condition3.getSelectedItem() +"") ;
//	            	开始时间
	            	String startime = bu.getStr(startDate.getText());//获取开始时间
//	            	结束时间
	            	String endtime = bu.getStr(endDate.getText()) ;//获取结束时间
	            	//System.out.println(dishi+"--"+kaodian+"--"+kaochang+"--"+startime+"--"+endtime);
	            	//判断考场内容
	            	if(changci.equals("")) {
	            		JOptionPane.showMessageDialog(null, "请选择场次" , "添加考场设置",JOptionPane.WARNING_MESSAGE);
	            		return ;
	            	}else {
	            		List<Zkzdata> list = facelog.getFaceLogsByCondition(rzresult,changci,rzcount,startime,endtime);
	            		//重新更新jtable列表
	            		Integer c1 =dftm.getRowCount() ; 
						for(int i=0; i<c1 ;i++) {
							dftm.removeRow(0);
						}
						allcount = 0 ;
						for(int i=0 ;i<list.size() ;i++ ) {
							Zkzdata zkzdata = list.get(i) ;
							allcount = allcount+1 ;
							Object[] row = new Object[] {allcount+"",zkzdata.getXingming(),zkzdata.getUpersonnum(),zkzdata.getZkznum(),zkzdata.getDd1(),zkzdata.getKd1(),zkzdata.getKc1()} ;//,param.getPid()+""
							dftm.addRow(row);
						}
	            	}
	            }
	        });
			final JScrollPane scrollPane = new JScrollPane();
			final GridBagConstraints gridBagConstraints_8 = new GridBagConstraints();
			gridBagConstraints_8.weighty = 1.0;
			gridBagConstraints_8.anchor = GridBagConstraints.NORTH;
			gridBagConstraints_8.insets = new Insets(0, 10, 0, 10);
			gridBagConstraints_8.fill = GridBagConstraints.BOTH;
			gridBagConstraints_8.gridwidth = 12;
			gridBagConstraints_8.gridy = 1;
			gridBagConstraints_8.gridx = 0;
			add(scrollPane, gridBagConstraints_8);
	
			dftm = new DefaultTableModel(){
	            @Override
	            public boolean isCellEditable(int row,int column){
	            	if(column==0) {
	            		return true ;
	            	}else {
	            		return false;
	            	}
	            }
			};
			            
//			String[] tableHeads = new String[]{"选择","序号", "地市", "地点","考点", "考场", "开始时间","结束时间"};//,"id可以隐藏吗"
			String[] tableHeads = new String[]{"序号","姓名", "身份证号","准考证号", "地点","考点", "考场"};//,"id可以隐藏吗"
			dftm.setColumnIdentifiers(tableHeads);
			DefaultTableCellRenderer render = new DefaultTableCellRenderer() ;
			render.setHorizontalAlignment(SwingConstants.CENTER);//设置单元格渲染方式
			//如何向table中放内容//查询初始数据
			
			table = new JTable(dftm);
			//table.setEnabled(false);
			table.setSelectionModel(new DefaultListSelectionModel() {
				@Override
				public void setSelectionInterval(int index0, int index1) {
					if (super.isSelectedIndex(index0)) {
						super.removeSelectionInterval(index0, index1);
					} else {
						super.addSelectionInterval(index0, index1);
					}
				}
			});
			table.setFont(new Font("", Font.PLAIN, 14));
			table.setRowHeight(30);
			table.getTableHeader().setPreferredSize(new Dimension(table.getTableHeader().getWidth(), 30));
			table.getTableHeader().setFont(new Font("", Font.PLAIN, 14));
			
			TableColumn column0 = table.getColumn("序号");
			column0.setPreferredWidth(10);
			column0.setCellRenderer(render);
			TableColumn column1 = table.getColumn("姓名");
			column1.setPreferredWidth(50);
			column1.setCellRenderer(render);
			TableColumn column2 = table.getColumn("身份证号");
			column2.setPreferredWidth(250);
			column2.setCellRenderer(render);
			TableColumn column = table.getColumn("准考证号");
			column.setPreferredWidth(50);
			column.setCellRenderer(render);
			TableColumn column3 = table.getColumn("地点");
			column3.setPreferredWidth(250);
			column3.setCellRenderer(render);
			TableColumn column4 = table.getColumn("考点");
			column4.setPreferredWidth(200);
			column4.setCellRenderer(render);
			TableColumn column5 = table.getColumn("考场");
			column5.setPreferredWidth(100);
			column5.setCellRenderer(render);
			
			scrollPane.setViewportView(table);
			
			
		} catch (Exception e2) {
			e2.printStackTrace();
		}
	}
}
