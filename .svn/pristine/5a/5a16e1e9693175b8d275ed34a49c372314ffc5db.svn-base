package com.dx.listener;

import java.awt.Graphics;
import java.sql.Connection;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JFrame;
import javax.swing.JPanel;

import org.apache.tools.zip.ZipExtraField;
import org.junit.Test;

import com.dx.dao.DBTemplate;
import com.dx.inter.FaceLogsInterface;
import com.dx.inter.ZkzInterface;
import com.dx.pojo.Faceadmin;
import com.dx.pojo.StatisticsResult;
import com.dx.pojo.Zkzdata;
import com.dx.query.IResultHandler;
import com.dx.query.PageResult;
import com.dx.service.FaceLogsImpl;
import com.dx.service.ZkzInterImpl;
import com.dx.util.Const;
import com.dx.util.DruidUtil;


public class Tset {

	public static void main(String[] args) {
//		DemoBeans beans = new DemoBeans();  
//        beans.addPropertyChangeListener(new PropertyChangeListener(){  
//  
//            public void propertyChange(PropertyChangeEvent evt) {  
//                System.out.println("OldValue:"+evt.getOldValue());  
//                System.out.println("NewValue:"+evt.getNewValue());  
//                System.out.println("tPropertyName:"+evt.getPropertyName());  
//            }});  
//        beans.setDemoName("test");  
		// 创建相框
        JFrame jFrame = new JFrame();
        // 创建画板
        JPanel jpanel = new JPanel() {
            //序列号（可省略）
            private static final long serialVersionUID = 1L;

            // 重写paint方法
            @Override
            public void paint(Graphics graphics) {
                // 必须先调用父类的paint方法
                super.paint(graphics);
                // 用画笔Graphics，在画板JPanel上画一个小人
                graphics.drawOval(100, 70, 30, 30);// 头部（画圆形）
                graphics.drawRect(105, 100, 20, 30);// 身体（画矩形）
                graphics.drawLine(105, 100, 75, 120);// 左臂（画直线）
                graphics.drawLine(125, 100, 150, 120);// 右臂（画直线）
                graphics.drawLine(105, 130, 75, 150);// 左腿（画直线）
                graphics.drawLine(125, 130, 150, 150);// 右腿（画直线）
            }
        };
        //将绘有小人图像的画板嵌入到相框中
        jFrame.add(jpanel);
        // 设置画框大小（宽度，高度），默认都为0
        jFrame.setSize(300, 300);
        // 将画框展示出来。true设置可见，默认为false隐藏
        jFrame.setVisible(true);
	}
	@Test
	public void testFaceLogByPage() {
		FaceLogsInterface fi=new FaceLogsImpl();
		PageResult pageResult=fi.getFaceLogsByPageCondition(null, "职业道德",null,null,null,1);
		List<Zkzdata> list=pageResult.getResult();
		for(Zkzdata z:list) {
			System.out.println(z);
		}
		//System.out.println(pageResult.getTotalCount()+"  "+pageResult.getPrevious()+"  "+pageResult.getNext());
		
	}
	@Test
	public void testDBTemplate() {
		String sql="SELECT * FROM faceadmin WHERE curchangci='职业道德'  LIMIT ? , ?" ;
		List<Faceadmin> list=DBTemplate.getResult(sql, new IResultHandler<List<Faceadmin>>() {
			@Override
			public List<Faceadmin> handler(ResultSet rs) throws Exception {
				List<Faceadmin> list=new ArrayList<>();
				while (rs.next()) {
					Faceadmin faceadmin=new Faceadmin();
					faceadmin.setFid(rs.getInt("fid"));
					faceadmin.setBmname(rs.getString("bmname"));
					faceadmin.setBmpass(rs.getString("bmpass"));
					faceadmin.setRemarks(rs.getString("remarks"));
					faceadmin.setCurmana(rs.getString("curmana"));
					faceadmin.setCurchangci(rs.getString("curchangci"));
					list.add(faceadmin);
				}
				return list;
			}
		},1,3);
		
      	for(Faceadmin f:list) {
      		System.out.println(f.toString());
      	}
	}
  @Test
  public void testDataSource() {
	  Connection connection=DruidUtil.getConnection();
	  System.out.println(connection);
	  DruidUtil.close(connection, null, null);
	  
  }
  
  @Test
  public void testZkzInter() {
	  ZkzInterface zi=new ZkzInterImpl();
	  PageResult result=zi.getCountByPageCondition("","","",Const.FIRSTPAGE);
	  System.out.println(result.getTotalCount());
	  
  }
}
