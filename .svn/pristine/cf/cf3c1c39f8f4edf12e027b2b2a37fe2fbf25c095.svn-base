package com.dx.util;

import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.WindowConstants;

import org.opencv.core.Core;
import org.opencv.core.Mat;
import org.opencv.core.MatOfRect;
import org.opencv.core.Point;
import org.opencv.core.Rect;
import org.opencv.core.Scalar;
import org.opencv.imgproc.Imgproc;
import org.opencv.objdetect.CascadeClassifier;
import org.opencv.videoio.VideoCapture;
import org.opencv.videoio.Videoio;

/**
 * @author fang
 *
 * @Date 2019年5月17日
 *
 *       项目名 FaceRecongnition
 *
 * @version 1.0
 */
public class CameraUtil {
//	static {
//		System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
//	}
	static File emptyf = new File("");
	static{System.load(emptyf.getAbsolutePath()+"\\opencv_java341.dll");}
	public static BufferedImage mat2BI(Mat mat) {
		int dataSize = mat.cols() * mat.rows() * (int) mat.elemSize();
		byte[] data = new byte[dataSize];
		mat.get(0, 0, data);
		int type = mat.channels() == 1 ? BufferedImage.TYPE_BYTE_GRAY : BufferedImage.TYPE_3BYTE_BGR;
		if (type == BufferedImage.TYPE_3BYTE_BGR) {
			for (int i = 0; i < dataSize; i += 3) {
				byte blue = data[i + 0];
				data[i + 0] = data[i + 2];
				data[i + 2] = blue;
			}
		}
		BufferedImage image = new BufferedImage(mat.cols(), mat.rows(), type);
		image.getRaster().setDataElements(0, 0, mat.cols(), mat.rows(), data);
		return image;
	}
	public static VideoCapture getVideoCapture(int width ,int height) {
		VideoCapture capture = new VideoCapture();
			capture.open(0);
		if (!capture.isOpened()) {
			capture.open(1);
		}
		if(!capture.isOpened()) {
			throw new RuntimeException("相机未打开");
		}
		capture.set(Videoio.CV_CAP_PROP_FRAME_WIDTH,  width);//Const.CV_CAP_PROP_FRAME_WIDTH   width
		capture.set(Videoio.CV_CAP_PROP_FRAME_HEIGHT,  height);//Const.CV_CAP_PROP_FRAME_HEIGHT   height
		//capture.set(Videoio.CV_CAP_PROP_FPS,Const.CV_CAP_PROP_FPS);// 帧率
		return capture;
	}

	// 测试用方法
	public static JFrame getJFrame(JPanel panel) {
		JFrame frame = new JFrame("camera");

		frame.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
		Toolkit toolkit = Toolkit.getDefaultToolkit();
		int x = (int) toolkit.getScreenSize().getWidth();
		int y = (int) toolkit.getScreenSize().getHeight();
		frame.setLocation(x / 2 - 700, y / 2 - 384);
		frame.setSize(1400, 768);
		frame.setVisible(true);
		frame.setContentPane(panel);
		return frame;

	}
}
