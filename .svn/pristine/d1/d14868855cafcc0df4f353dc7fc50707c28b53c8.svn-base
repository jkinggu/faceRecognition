package com.dx.login;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.RandomAccessFile;
import java.util.Enumeration;

import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import javax.swing.WindowConstants;

import com.dx.FaceMainFrame;
import com.dx.pojo.Faceadmin;
import com.dx.service.FaceadminImpl;
public class Login extends JFrame {
	private JLabel userLabel;
	private JLabel passLabel;
	private JLabel ccLable;
	private JButton exit;
	private JButton login;
	private static Faceadmin fadmin;
	private JTextField ipField;
	//String basepath = this.getClass().getProtectionDomain().getCodeSource().getLocation().getPath()+"faceimages/";//D:/faceimages/
	public Login() {
		setTitle("登录人证合一系统");
		ImageIcon icon=new ImageIcon("opencv\\img/face.png");  //img/face.png图片不能被压缩到jar中（即使打成jarbao也不管用），单独用绝对地址隔离出来
		this.setIconImage(icon.getImage());
		
		Toolkit toolkit = Toolkit.getDefaultToolkit();
		int x = (int)toolkit.getScreenSize().getWidth();
		int y = (int)toolkit.getScreenSize().getHeight();
		

		final JPanel panel = new LoginPanel();
		panel.setLayout(null);
		getContentPane().add(panel);
		setBounds(300, 200, panel.getWidth(), panel.getHeight());
		this.setLocation(x/2-panel.getWidth()/2, y*2/5-panel.getHeight()/2);
		//System.out.println(panel.getWidth()+"     +    "+panel.getHeight());
		
//		ButtonGroup group=new ButtonGroup();
//        JRadioButton locallianjie=new JRadioButton("本地连接",false);
//        group.add(locallianjie);
//        locallianjie.setBounds(76, 176, 92, 25);
//        panel.add(locallianjie);
//        
//        
//        JRadioButton iplianjie=new JRadioButton("局域网链接",false);
//        group.add(iplianjie);
//        iplianjie.setBounds(170, 176, 110, 25);
//        panel.add(iplianjie);
//        
//        //改变时定义监听器
//        ActionListener iplistener=new ActionListener() {
//
//            @Override
//            public void actionPerformed(ActionEvent e) {
//                // TODO Auto-generated method stub
//                switch (e.getActionCommand()) {
//                case "本地连接":
//                	ipField.setText("");
//                	modifyFileContent("");
//                    break;
//                case "局域网链接":
//                	ipField.setText("示例192.168.1.1");
//                    break;
//                default:
//                    break;
//                }
//            }
//        };//listener
//        //定义单选按钮监听器
//        locallianjie.addActionListener(iplistener);
//        iplianjie.addActionListener(iplistener);
//        
//        
//        ipField = new JTextField();
//        ipField.setFont(new Font("Dialog", Font.PLAIN, 14));
//        ipField.setBounds(290, 175, 130, 25);
//		panel.add(ipField);
//		
//		JButton button_1 = new JButton();
//		button_1.addActionListener(new ActionListener() {
//			public void actionPerformed(ActionEvent arg0) {
//				//保存IP，如果不保存，默认为本地链接
//				String iptype = "" ;
//				Enumeration<AbstractButton> radioBtns=group.getElements();
//				while (radioBtns.hasMoreElements()) {
//					AbstractButton btn = radioBtns.nextElement();
//					if(btn.isSelected()){
//						iptype = btn.getText();
//					}
//				}
//				if(iptype.equals("本地连接")) {
//					int copy = JOptionPane.showConfirmDialog(null,  
//                            "确定使用本地数据库链接", "确定", JOptionPane.YES_NO_OPTION,  
//                            JOptionPane.QUESTION_MESSAGE);  
//                    if (copy == JOptionPane.YES_OPTION) { 
//                    	modifyFileContent("");
//                    } 
//				}else if(iptype.equals("局域网链接")) {
//					String iptext = ipField.getText() ;
//					if(iptext == null || iptext.equals("")) {
//						JOptionPane.showMessageDialog(null, "请输入局域网数据库连接IP", "提示消息",JOptionPane.WARNING_MESSAGE);
//						return ;
//					}else {
//						//更改本地数据库连接文件db.properties
//						
//						int copy = JOptionPane.showConfirmDialog(null,  
//	                            "确定使用远程数据库链接", "确定", JOptionPane.YES_NO_OPTION,  
//	                            JOptionPane.QUESTION_MESSAGE);  
//	                    if (copy == JOptionPane.YES_OPTION) { 
//	                    	modifyFileContent(iptext);
//	                    } 
//					}
//					
//				}else {
//					JOptionPane.showMessageDialog(null, "请勾选数据库链接方式", "提示消息",JOptionPane.WARNING_MESSAGE);
//					return ;
//				}
//				
//			}
//		});
//		button_1.setText("保存");
//		button_1.setBounds(430, 176, 60, 25);
//		panel.add(button_1);
		
		setVisible(true);
		setResizable(false);
		setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        
		userLabel = new JLabel();
		userLabel.setText("用户名：");
		userLabel.setBounds(170, 206, 200, 25);
		userLabel.setFont(new Font("", Font.PLAIN, 14));
		panel.add(userLabel);
		
		
		final JTextField userName = new JTextField();
		userName.setBounds(220, 205, 200, 25);
		userName.setFont(new Font("", Font.PLAIN, 14));
//		userName.setPreferredSize(new Dimension(200, 30));
		panel.add(userName);
		
		
		passLabel = new JLabel();
		passLabel.setText("密  码：");
		passLabel.setBounds(170, 241, 200, 25);
		passLabel.setFont(new Font("", Font.PLAIN, 14));
		panel.add(passLabel);
		

		final JPasswordField userPassword = new JPasswordField();
		userPassword.addKeyListener(new KeyAdapter() {
			public void keyPressed(final KeyEvent e) {
				if (e.getKeyCode() == 10)
					login.doClick();
			}
		});
		userPassword.setBounds(220, 240, 200, 25);
		userPassword.setFont(new Font("", Font.PLAIN, 14));
//		userPassword.setPreferredSize(new Dimension(200, 30));
		panel.add(userPassword);
		
		ccLable = new JLabel();
		ccLable.setText("场  次：");
		ccLable.setBounds(170, 276, 200, 25);
		ccLable.setFont(new Font("", Font.PLAIN, 14));
		panel.add(ccLable);
		
		
		JComboBox ccBox = new JComboBox();
		String[] cc = new String[] {"职业道德","职业能力","岗位技能"};
		ccBox.setModel(new DefaultComboBoxModel(cc));
		ccBox.setFont(new Font("", Font.PLAIN, 14));
		ccBox.setBounds(220, 276, 200, 25);
		panel.add(ccBox);
		
		
		login = new JButton();
		login.addActionListener(new ActionListener() {
			public void actionPerformed(final ActionEvent e) {
//				//判断链接是否勾选，如果没有勾选，提示选择数据库链接
//				String judgetext = "" ;
//				String iptype = ""  ;
//				Enumeration<AbstractButton> radioBtns=group.getElements();
//				while (radioBtns.hasMoreElements()) {
//					AbstractButton btn = radioBtns.nextElement();
//					if(btn.isSelected()){
//						iptype = btn.getText();
//						judgetext="true";
//					}
//				}
//				if(judgetext.equals("")) {
//					JOptionPane.showMessageDialog(null, "请勾选数据库链接方式，并点击保存", "提示消息",JOptionPane.WARNING_MESSAGE);  
//					return;
//				}else {
//					if(iptype.equals("局域网链接")) {
//						String iptext = ipField.getText() ;
//						if(iptext == null || iptext.equals("")) {
//							JOptionPane.showMessageDialog(null, "请输入局域网数据库连接IP", "提示消息",JOptionPane.WARNING_MESSAGE);
//							return ;
//						}else {
//							int copy = JOptionPane.showConfirmDialog(null,  
//		                            "确定使用远程数据库链接", "确定", JOptionPane.YES_NO_OPTION,  
//		                            JOptionPane.QUESTION_MESSAGE);  
//		                    if (copy == JOptionPane.YES_OPTION) { 
//		                    } else {
//		                    	return ;
//		                    }
//						}
//					}else {
//						
//					}
//				}
				fadmin = new FaceadminImpl().loginAdmin(userName.getText(), new String(userPassword.getPassword()),
						ccBox.getSelectedItem()+"");
				if (fadmin.getBmname() == null || fadmin.getBmpass() == null) {
					userName.setText(null);
					userPassword.setText(null);
					JOptionPane.showMessageDialog(null, "用户名或密码错误", "提示消息",JOptionPane.WARNING_MESSAGE);  
					return;
				}
				setVisible(false);
				new FaceMainFrame();
			}
		});
		login.setText("登录");
		login.setBounds(220, 323, 60, 25);
		panel.add(login);
		exit = new JButton();
		exit.addActionListener(new ActionListener() {
			public void actionPerformed(final ActionEvent e) {
				System.exit(0);
			}
		});
		exit.setText("退出");
		exit.setBounds(322, 323, 60, 25);
		panel.add(exit);
		
	}
	public void  modifyFileContent(String iptext) {
		try {
    		InputStream in = new FileInputStream("dbsource/db.properties");
			byte[] b = new byte[1024] ;
			in.read(b);
			String oldstr = new String(b);
			Integer findex = oldstr.indexOf("sqlite:");
			Integer indexstr = oldstr.indexOf("/data/facerenzheng.db");
			String oldss = oldstr.substring(findex+7,indexstr);//需要替换的老字符串
			String newStr = "dbsource";
			if(!"".equals(iptext)) {
				newStr = "//"+iptext;
			}
			in.close();
			String newalltr = oldstr.replaceAll(oldss, newStr);
			File txt=new File("dbsource/db.properties");
			byte bytes[]=new byte[512];
			bytes=newalltr.getBytes(); 
			int xx=newalltr.length(); 
			FileOutputStream fos=new FileOutputStream(txt);
			fos.write(bytes,0,xx);
			fos.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
    	
    }
	public static Faceadmin getFadmin() {
		return fadmin;
	}
	public static void setFadmin(Faceadmin fadmin) {
		Login.fadmin = fadmin;
	}
	
	public static void main(String[] args) {
		int[] all = new int[33];
		int num = 1;
		for (int i : all) {
			all[i] = num++;
		}
		
		
	}
}
